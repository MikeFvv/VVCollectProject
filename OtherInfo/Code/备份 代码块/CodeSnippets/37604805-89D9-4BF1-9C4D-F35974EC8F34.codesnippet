<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>xxUICollectionView</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>
&lt;UICollectionViewDataSource, UICollectionViewDelegateFlowLayout,UICollectionViewDelegate&gt;

@property (nonatomic, strong) UICollectionView *collectionView;

#pragma mark - 创建一个UICollectionView
- (UICollectionView *)collectionView {
    if (!_collectionView) {
        UICollectionViewFlowLayout *layout = [[UICollectionViewFlowLayout alloc]init];
        
        CGFloat itemWidth = (mxwScreenWidth() -15*2 -10) / 2 - 0.1;
        // 设置每个item的大小
        layout.itemSize = CGSizeMake(itemWidth, 223);
        
        // 设置列间距
        layout.minimumInteritemSpacing = 10;
        
        // 设置行间距
        layout.minimumLineSpacing = 10;
        
        //每个分区的四边间距UIEdgeInsetsMake
        layout.sectionInset = UIEdgeInsetsMake(10, 15, 10, 15);
        
        // 设置布局方向(滚动方向)
        layout.scrollDirection = UICollectionViewScrollDirectionVertical;
        
        _collectionView = [[UICollectionView alloc]initWithFrame:CGRectMake(0, 0, mxwScreenWidth(), mxwScreenHeight()-mxwStatusNavBarHeight() -mxwBottomSafeAreaHeight() - 40) collectionViewLayout:layout];
        
        /** mainCollectionView 的布局(必须实现的) */
        _collectionView.collectionViewLayout = layout;
        
        //mainCollectionView 的背景色
        _collectionView.backgroundColor = [UIColor clearColor];
        
        //禁止滚动
        //    _collectionView.scrollEnabled = NO;
        
        //设置代理协议
        _collectionView.delegate = self;
        
        //设置数据源协议
        _collectionView.dataSource = self;
        //            _collectionView.allowsMultipleSelection = YES;
        
        [_collectionView registerClass:[KKAVideoListCell class] forCellWithReuseIdentifier:@"KKAVideoListCell"];
        
        
    }
    return _collectionView;
}


#pragma mark -- UICollectionViewDataSource 数据源


//定义展示的Section的个数
-(NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView
{
    return 1;
}

//定义展示的UICollectionViewCell的个数
-(NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section
{
    return self.dataArray.count;
}

//每个UICollectionView展示的内容
-(UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath
{
    KKAVideoListCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:@"KKAVideoListCell" forIndexPath:indexPath];
//    cell.fromType = self.fromType;
    cell.model = self.dataArray[indexPath.row];
    return cell;
    
}

#pragma mark --UICollectionViewDelegateFlowLayout  视图布局

#pragma mark --UICollectionViewDelegate 代理
//UICollectionView被选中时调用的方法
-(void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath
{
    NSLog(@"1");
    
    TikTokViewController *viewController = [[TikTokViewController alloc] init];
    viewController.currentIndex = indexPath.row;
    
    EPVShortVideoModel *model = self.dataArray[indexPath.row];
    viewController.title        = model.title;
    viewController.videosList   = self.dataArray;
    
    viewController.style        = TikTokViewControllerStyleKKA;
    
#ifdef DEBUG
    viewController.isUseReleaseImageAndVideo = YES;
#endif
    
    
    [self.getTopViewController showViewController:viewController sender:nil];
}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>37604805-89D9-4BF1-9C4D-F35974EC8F34</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetSummary</key>
	<string>xxUICollectionView</string>
	<key>IDECodeSnippetTitle</key>
	<string>xxUICollectionView</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
